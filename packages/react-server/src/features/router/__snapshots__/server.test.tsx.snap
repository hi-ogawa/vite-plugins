// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`generateRouteModuleTree > basic 1`] = `
{
  "children": {
    "": {
      "children": {
        "x": {
          "children": {
            "y": {
              "value": {
                "layout": {
                  "default": "/X/Y/LAYOUT.TSX",
                },
                "page": {
                  "default": "/X/Y/PAGE.TSX",
                },
              },
            },
          },
          "value": {
            "error": {
              "default": "/X/ERROR.TSX",
            },
            "page": {
              "default": "/X/PAGE.TSX",
            },
          },
        },
      },
      "value": {
        "layout": {
          "default": "/LAYOUT.TSX",
        },
        "page": {
          "default": "/PAGE.TSX",
        },
      },
    },
  },
}
`;

exports[`generateRouteModuleTree > basic 2`] = `
{
  "__pathname": "/x",
  "layoutContentMap": {
    "/": "/x:layout",
    "/x": "/x:page",
    "__root": "/:layout",
  },
  "metadata": <React.Fragment />,
  "nodeMap": {
    "/:layout": <LayoutMatchProvider
      value={
        {
          "params": [
            [
              null,
              "",
            ],
          ],
        }
      }
    >
      </LAYOUT.TSX
        params={{}}
        request={
          {
            "headers": {},
            "url": "https://test.local/x",
          }
        }
        searchParams={{}}
        url={
          {
            "hash": "",
            "host": "test.local",
            "hostname": "test.local",
            "href": "https://test.local/x",
            "origin": "https://test.local",
            "password": "",
            "pathname": "/x",
            "port": "",
            "protocol": "https:",
            "search": "",
            "username": "",
          }
        }
      >
        <RedirectBoundary>
          <LayoutContent
            name="/"
          />
        </RedirectBoundary>
      <//LAYOUT.TSX>
    </LayoutMatchProvider>,
    "/x:layout": <LayoutMatchProvider
      value={
        {
          "params": [
            [
              null,
              "",
            ],
            [
              null,
              "x",
            ],
          ],
        }
      }
    >
      <React.Fragment>
        <ErrorBoundary
          errorComponent="/X/ERROR.TSX"
        >
          <RedirectBoundary>
            <LayoutContent
              name="/x"
            />
          </RedirectBoundary>
        </ErrorBoundary>
      </React.Fragment>
    </LayoutMatchProvider>,
    "/x:page": </X/PAGE.TSX
      params={{}}
      request={
        {
          "headers": {},
          "url": "https://test.local/x",
        }
      }
      searchParams={{}}
      url={
        {
          "hash": "",
          "host": "test.local",
          "hostname": "test.local",
          "href": "https://test.local/x",
          "origin": "https://test.local",
          "password": "",
          "pathname": "/x",
          "port": "",
          "protocol": "https:",
          "search": "",
          "username": "",
        }
      }
    />,
  },
  "params": [
    [
      null,
      "",
    ],
    [
      null,
      "x",
    ],
  ],
}
`;

exports[`generateRouteModuleTree > basic 3`] = `
{
  "__pathname": "/x/y",
  "layoutContentMap": {
    "/": "/x:layout",
    "/x": "/x/y:layout",
    "/x/y": "/x/y:page",
    "__root": "/:layout",
  },
  "metadata": <React.Fragment />,
  "nodeMap": {
    "/:layout": <LayoutMatchProvider
      value={
        {
          "params": [
            [
              null,
              "",
            ],
          ],
        }
      }
    >
      </LAYOUT.TSX
        params={{}}
        request={
          {
            "headers": {},
            "url": "https://test.local/x/y",
          }
        }
        searchParams={{}}
        url={
          {
            "hash": "",
            "host": "test.local",
            "hostname": "test.local",
            "href": "https://test.local/x/y",
            "origin": "https://test.local",
            "password": "",
            "pathname": "/x/y",
            "port": "",
            "protocol": "https:",
            "search": "",
            "username": "",
          }
        }
      >
        <RedirectBoundary>
          <LayoutContent
            name="/"
          />
        </RedirectBoundary>
      <//LAYOUT.TSX>
    </LayoutMatchProvider>,
    "/x/y:layout": <LayoutMatchProvider
      value={
        {
          "params": [
            [
              null,
              "",
            ],
            [
              null,
              "x",
            ],
            [
              null,
              "y",
            ],
          ],
        }
      }
    >
      </X/Y/LAYOUT.TSX
        params={{}}
        request={
          {
            "headers": {},
            "url": "https://test.local/x/y",
          }
        }
        searchParams={{}}
        url={
          {
            "hash": "",
            "host": "test.local",
            "hostname": "test.local",
            "href": "https://test.local/x/y",
            "origin": "https://test.local",
            "password": "",
            "pathname": "/x/y",
            "port": "",
            "protocol": "https:",
            "search": "",
            "username": "",
          }
        }
      >
        <RedirectBoundary>
          <LayoutContent
            name="/x/y"
          />
        </RedirectBoundary>
      <//X/Y/LAYOUT.TSX>
    </LayoutMatchProvider>,
    "/x/y:page": </X/Y/PAGE.TSX
      params={{}}
      request={
        {
          "headers": {},
          "url": "https://test.local/x/y",
        }
      }
      searchParams={{}}
      url={
        {
          "hash": "",
          "host": "test.local",
          "hostname": "test.local",
          "href": "https://test.local/x/y",
          "origin": "https://test.local",
          "password": "",
          "pathname": "/x/y",
          "port": "",
          "protocol": "https:",
          "search": "",
          "username": "",
        }
      }
    />,
    "/x:layout": <LayoutMatchProvider
      value={
        {
          "params": [
            [
              null,
              "",
            ],
            [
              null,
              "x",
            ],
          ],
        }
      }
    >
      <React.Fragment>
        <ErrorBoundary
          errorComponent="/X/ERROR.TSX"
        >
          <RedirectBoundary>
            <LayoutContent
              name="/x"
            />
          </RedirectBoundary>
        </ErrorBoundary>
      </React.Fragment>
    </LayoutMatchProvider>,
  },
  "params": [
    [
      null,
      "",
    ],
    [
      null,
      "x",
    ],
    [
      null,
      "y",
    ],
  ],
}
`;

exports[`generateRouteModuleTree > basic 4`] = `
{
  "__pathname": "/z",
  "layoutContentMap": {
    "/": "/z:layout",
    "/z": "/z:page",
    "__root": "/:layout",
  },
  "metadata": <React.Fragment />,
  "nodeMap": {
    "/:layout": <LayoutMatchProvider
      value={
        {
          "params": [
            [
              null,
              "",
            ],
          ],
        }
      }
    >
      </LAYOUT.TSX
        params={{}}
        request={
          {
            "headers": {},
            "url": "https://test.local/z",
          }
        }
        searchParams={{}}
        url={
          {
            "hash": "",
            "host": "test.local",
            "hostname": "test.local",
            "href": "https://test.local/z",
            "origin": "https://test.local",
            "password": "",
            "pathname": "/z",
            "port": "",
            "protocol": "https:",
            "search": "",
            "username": "",
          }
        }
      >
        <RedirectBoundary>
          <LayoutContent
            name="/"
          />
        </RedirectBoundary>
      <//LAYOUT.TSX>
    </LayoutMatchProvider>,
    "/z:layout": <LayoutMatchProvider
      value={
        {
          "params": [
            [
              null,
              "",
            ],
          ],
        }
      }
    >
      <React.Fragment>
        <RedirectBoundary>
          <LayoutContent
            name="/z"
          />
        </RedirectBoundary>
      </React.Fragment>
    </LayoutMatchProvider>,
    "/z:page": <ThrowNotFound
      params={{}}
      request={
        {
          "headers": {},
          "url": "https://test.local/z",
        }
      }
      searchParams={{}}
      url={
        {
          "hash": "",
          "host": "test.local",
          "hostname": "test.local",
          "href": "https://test.local/z",
          "origin": "https://test.local",
          "password": "",
          "pathname": "/z",
          "port": "",
          "protocol": "https:",
          "search": "",
          "username": "",
        }
      }
    />,
  },
  "params": [
    [
      null,
      "",
    ],
  ],
}
`;
