// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`hmrTransform > 0 - basic 1`] = `
{
  "errors": [],
  "exportIds": [
    "Test1",
    "Test2",
    "Test3",
    "Test4",
  ],
}
`;

exports[`hmrTransform > 0 - basic 2`] = `
"
export function Test1() {}

export let Test2 = () => {}

export /*some*/ let   /*comment*/ Test3 = () => {}

export default function Test4() {}


if (import.meta.env.SSR && import.meta.hot) {
  const $$hmr = await import("@hiogawa/vite-plugin-hmr/runtime");
  const $$registry = $$hmr.createRegistry();


  $$registry.exports["Test1"] = {
    value: Test1,
    update: ($$next) => {
      Test1 = $$next;
    }
  };


  $$registry.exports["Test2"] = {
    value: Test2,
    update: ($$next) => {
      Test2 = $$next;
    }
  };


  $$registry.exports["Test3"] = {
    value: Test3,
    update: ($$next) => {
      Test3 = $$next;
    }
  };


  $$registry.exports["Test4"] = {
    value: Test4,
    update: ($$next) => {
      Test4 = $$next;
    }
  };


  $$hmr.setupHot(import.meta.hot, $$registry);
  import.meta.hot.accept;
}
"
`;

exports[`hmrTransform > 1 - unsupported separate named export 1`] = `
{
  "errors": [
    "export { SomeNamed };",
  ],
  "exportIds": [],
}
`;

exports[`hmrTransform > 1 - unsupported separate named export 2`] = `
"
const SomeNamed = () => {};
export { SomeNamed };


if (import.meta.env.SSR && import.meta.hot) {
  import.meta.hot.accept(() => {
    import.meta.hot.invalidate("unsupported usage: export { SomeNamed };")
  });
}
"
`;

exports[`hmrTransform > 2 - unsupported separate default export 1`] = `
{
  "errors": [
    "export default SomeDefault;",
  ],
  "exportIds": [],
}
`;

exports[`hmrTransform > 2 - unsupported separate default export 2`] = `
"
const SomeDeafult = () => {};
export default SomeDefault;


if (import.meta.env.SSR && import.meta.hot) {
  import.meta.hot.accept(() => {
    import.meta.hot.invalidate("unsupported usage: export default SomeDefault;")
  });
}
"
`;
